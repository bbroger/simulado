% Arquivo de Importação para Java Fundamentos 
% ------------------------------------------------------------------------
% Campos: Código«Questao«RespA«RespB«RespC«RespD«Certa«Area«Grupo«Sala
% Exemplo: C01Q01«Isto é teste«Sim«Não«Talvez«Depende«A«Conhecimentos Gerais«Teste«1
% ------------------------------------------------------------------------
C01Q01«A ordem correta dos passos lógicos para fritar um ovo seria:«Colocar a Frigideira no Fogo, 2.Colocar Óleo na Frigideira, 3.Quebrar o ovo na Frigideira, 4.Esperar o ovo fritar«Colocar Óleo na Frigideira, 2.Colocar a Frigideira no Fogo, 3.Quebrar o ovo na Frigideira, 4.Esperar o ovo fritar«Colocar Óleo na Frigideira, 2.Quebrar o ovo na Frigideira, 3.Colocar a Frigideira no Fogo, 4.Esperar o ovo fritar«Todas as ordens acima estão corretas e farão a tarefa de fritar o ovo«D«Java Fundamentos«Conceito Básico«1
C01Q02«Para as ordens colocadas nos passos lógicos é correto afirmar:«Cada passo deve conter somente uma ação (um único verbo)«Cada passo pode conter duas ações (dois verbos)«Não existe nenhuma relação entre um passo lógico e uma ação (verbo)«Não importa a quantidade de ações que contém um passo lógico, desde que exista pelo menos uma ação (um verbo)«A«Java Fundamentos«Conceito Básico«1
C01Q03«Entendemos por variável:«Uma instrução para se realizar algo«Uma espécie de proteção de instruções«É o mesmo que software«Algo como uma caixa que pode armazenar coisas definidas dentro«D«Java Fundamentos«Conceito Básico«1
C01Q04«Entendemos por fluxograma:«Conjunto de instruções definidas, também conhecido por Algorítmo«Algo utilizado para documentar um programa«Um software utilizado para realizar programação Orientada a Objetos«É o mesmo que hardware«A«Java Fundamentos«Conceito Básico«1
C01Q05«É correto afirmar que Java é baseado nos conceitos da Orientação a Objetos porque:«Pode-se aplicar todos os conceitos de Orientação a Objetos conhecidos«A linguagem é portátil para todos os ambientes«Java é baseado em C++«Não gera executáveis«A«Java Fundamentos«Conceito Básico«1
C01Q06«Java não gera executáveis, isso corresponde a dizer que, o programa em Linguagem Java:«Não é compilado«Roda de maneira semelhante ao HTML, através de um interpretador de linguagem«Só serve como modelo para outras linguagens«Não é linkeditado as bibliotecas do Sistema Operacional«D«Java Fundamentos«Conceito Básico«1
C01Q07«Toda instrução em Java, deve, obrigatoriamente terminar com:«ponto final«ponto e vírgula«vírgula«barra«B«Java Fundamentos«Conceito Básico«1
C01Q08«A ordem correta dos elementos de uma classe, é:«1º) definição das Classes 2º) definição dos elementos importados 3º) definição do Pacote«1º) definição do Pacote 2º) definição dos elementos importados 3º) definição das Classes«1º) definição dos elementos importados 2º) definição das Classes 3º) definição do Pacote«1º) definição dos elementos importados 2º) definição do Pacote 3º) definição das Classes«B«Java Fundamentos«Conceito Básico«1
C01Q09«Em linguagem Java, o conjunto de chaves "{" e "}" define:«O início e o término de uma instrução«Uma TAG com a instrução para o compilador de Java«O início e o término de um bloco«Uma TAG com a instrução para a Java Virtual Machine«C«Java Fundamentos«Conceito Básico«1
C01Q10«Para que Java possa ser portátil e ter a capacidade de rodar em qualquer sistema operacional, não é realizado o processo de:«Compilação«Interpretação«Linkedição«Execução«C«Java Fundamentos«Conceito Básico«1
C01Q11«Um evento está associado:«a uma ação que ocorre«a criação de um objeto«a criação de uma classe«a mudanças climáticas«A«Java Fundamentos«Conceito Básico«1
C01Q12«São princípios da Orientação a Objetos, exceto:«Modularidade«Herança«Diferenciação««Encapsulamento«C«Java Fundamentos«Conceito Básico«1
C01Q13«Em Orientação a Objetos, o princípio da Abstração, é:«Isolar os aspectos que sejam importantes para algum propósito e suprimir os que não forem«Não é preciso conhecer o todo para saber o funcionamento da classe«Uma classe pode gerar novas classes que sejam suas cópias perfeitas e a partir destas e possível readaptá-las ao meio em que vivem«É melhor uma classe ter 100 métodos com 10 instruções, do que, um método com 1.000 instruções«A«Java Fundamentos«Conceito Básico«1
C01Q14«Métodos modificadores, são caracterizado por:«Seus nomes contém as palavras get/set«São métodos estáticos«São métodos construtores«São métodos que se referem a um atributo público e final«A«Java Fundamentos«Conceito Básico«1
C01Q15«A característica IS-A, refere-se:«A herança«Ao encapsulamento«A associações entre classes«Não existe isso em Java«A«Java Fundamentos«Conceito Básico«1
C02Q01«Qual será o resultado da seguinte instrução: System.out.println("A soma de 10 + 3 = " + 10 + 3);«A soma de 10 + 3 = 13«A soma de 10 + 3 = 103«Erro de compilação«Erro de Execução«B«Java Fundamentos«Instruções«2
C02Q02«Qual será o resultado da seguinte instrução: System.exit(0);«Causará uma interrupção da JVM e consequentemente, terminará o programa«Causa um retorno incondicional no método que tiver inserido«Erro de compilação«Erro de Execução«A«Java Fundamentos«Instruções«2
C02Q03«Qual será o resultado da seguinte instrução: byte a = 5 + 1«Um atributo do tipo byte com o valor de 6«Um atributo do tipo inteiro com o valor de 6«Erro de compilação«Erro de Execução«C«Java Fundamentos«Instruções«2
C02Q04«Qual será o resultado da seguinte instrução: int num = Integer.parseInt("34");«Um atributo do tipo inteiro com o valor 34«Um atributo do tipo numérico com o valor 34«Erro de compilação«Erro de Execução«A«Java Fundamentos«Instruções«2
C02Q05«Qual será o resultado da seguinte instrução: System.out.println(10/3);«3«3.3333333«Erro de compilação«Erro de Execução«A«Java Fundamentos«Instruções«2
C02Q06«Qual será o resultado da seguinte instrução: String a = "Oi"; String b = "Oi"; System.out.println(a == b);«true«false«Erro de compilação«Erro de Execução«A«Java Fundamentos«Instruções«2
C02Q07«Qual será o resultado da seguinte instrução: for (int i = 0; i < 4; i++) System.out.print(i + " ");«0 1 2 3 4«0 1 2 3«1 2 3 4«0 1 2 3 4«B«Java Fundamentos«Instruções«2
C02Q08«Não é uma palavra-chave ou reservada:«abstract«final«main«return«C«Java Fundamentos«Instruções«2
C02Q09«Não é uma palavra-chave ou reservada:«do«for«exception«throws«C«Java Fundamentos«Instruções«2
C02Q10«Qual será o resultado da seguinte instrução: if (true) System.out.println("a") else System.out.println("b");«a«b«Erro de compilação«Erro de Execução«C«Java Fundamentos«Instruções«2
C02Q11«Qual será o resultado da seguinte instrução: int a = 0; while (a++ < 5) System.out.println(a);«0 1 2 3 4«1 2 3 4 5«Erro de compilação«Erro de Execução«B«Java Fundamentos«Instruções«2
C02Q12«Qual será o resultado da seguinte instrução: String a = new StringBuilder("a"); System.out.println(a);«a« «Erro de compilação«Erro de Execução«C«Java Fundamentos«Instruções«2
C02Q13«Qual será o resultado da seguinte instrução: int c = 7; c *= 2; c += 2; System.out.println(c);«7«14«16«Erro de compilação«C«Java Fundamentos«Instruções«2
C02Q14«Qual será o resultado da seguinte instrução: int c = 1; System.out.println(c++ + " " + ++c);«1 3«2 3«1 1«3 3«A«Java Fundamentos«Instruções«2
C02Q15«São tipos primitivos inteiros:«boolean, byte, char, short, int e long«byte, char, short, int e long«byte, char, short e int«float e double«C«Java Fundamentos«Instruções«2
C03Q01«Qual dos seguintes métodos, encontrado na classe java.lang.String, que retorna um caracter de uma determinada posição:«charAt()«getChar()«setChar()«toString()«A«Java Fundamentos«Métodos Utilitários«3
C03Q02«Qual dos seguintes métodos, encontrado na classe java.lang.String, que retorna o tamanho da String:«length()«tam()«obtain()«getTam()«A«Java Fundamentos«Métodos Utilitários«3
C03Q03«Qual dos seguintes métodos, encontrado na classe java.lang.String, que retorna true se a String informada como parâmetro ocorrer no início da String:«indexOf()«startsWith()«findBegin()«obtain()«B«Java Fundamentos«Métodos Utilitários«3
C03Q04«Qual dos seguintes métodos, encontrado na classe java.lang.String, que retira os espaços em branco iniciais e finais da String:«allTrim()«spacesOff()«spacesAll()«trim()«D«Java Fundamentos«Métodos Utilitários«3
C03Q05«Qual dos seguintes métodos, encontrado na classe java.lang.StringBuffer, que adiciona uma String:«add()«setString()«append()«inString()«C«Java Fundamentos«Métodos Utilitários«3
C03Q06«Qual dos seguintes métodos, encontrado na classe java.lang.StringBuffer, que inverte o seu conteúdo:«remove()«inverse()«finalToEnd()«endToFinal()«B«Java Fundamentos«Métodos Utilitários«3
C03Q07«Qual das seguintes classes gera um objeto imutável:«String«Math«StringBuilder«StringBuffer«A«Java Fundamentos«Métodos Utilitários«3
C03Q08«A Wrapper Class que acessora o tipo primitivo "int" é:«Integer«Numeric«Number«Int«A«Java Fundamentos«Métodos Utilitários«3
C03Q09«A Wrapper Class que acessora o tipo primitivo "char" é:«Char«Character«Integer«Numeric«B«Java Fundamentos«Métodos Utilitários«3
C03Q10«Método Padrão da Wrapper Class que converte um objeto java.lang.String para um tipo primitivo determinado«parse[Tipo]() // por exemplo: parseInt(), parseDouble(), parseByte(), ..«get[Tipo]() // por exemplo: getInt(), getDouble(), getByte(), ..«toString()«toPrimitiveType()«A«Java Fundamentos«Métodos Utilitários«3
C03Q11«Qual dos seguintes métodos, encontrado na classe java.lang.Math, que retorna o valor absoluto de um número:«abs()«absolute()«getValue()«number()«A«Java Fundamentos«Métodos Utilitários«3
C03Q12«Qual dos seguintes métodos, encontrado na classe java.lang.Math, que retorna o primeiro inteiro menor que o valor:«ceil()«floor()«round()«min()«B«Java Fundamentos«Métodos Utilitários«3
C03Q13«Qual dos seguintes métodos, encontrado na classe java.lang.Math, que retorna o primeiro inteiro maior que o valor:«ceil()«floor()«round()«max()«A«Java Fundamentos«Métodos Utilitários«3
C03Q14«Qual dos seguintes métodos, encontrado na classe java.util.Random, que retorna um inteiro aleatório:«nextInt()«get()«obtain()«random()«A«Java Fundamentos«Métodos Utilitários«3
C03Q15«Qual dos seguintes métodos, encontrado na classe java.util.Scanner, que obtém um valor inteiro:«nextInt()«get()«obtain()«entry()«A«Java Fundamentos«Métodos Utilitários«3
C04Q01«Qual o resultado ao executar a seguinte classe: public class Nova { public void roda() { System.out.println("Rodando"); } public static void main(String[] args) { Nova a = new Nova(); System.out.println("Preparando para rodar"); }}«Erro de compilação«Erro de "Runtime Exception"«Mostra "Preparando para rodar" e "Rodando"«Mostra "Preparando para rodar" somente«dDJava Fundamentos«Sintaxe da Linguagem«4
C04Q02«Qual o resultado ao executar a seguinte classe: class Pai { static void show() { System.out.println("Show na Classe Pai"); }} public class Filho extends Pai { static void show() { System.out.println("Show na Classe Filho"); } public static void main(String[] args) { Pai p = new Pai(); p.show(); Filho f = new Filho(); f.show(); p = f; p.show(); }}«Mostra "Show na Classe Pai" - "Show na Classe Filho" - "Show na Classe Filho"«Mostra "Show na Classe Filho" - "Show na Classe Filho" - "Show na Classe Pai"«Mostra "Show na Classe Pai" - "Show na Classe Filho" - "Show na Classe Pai"«Erro de Compilação«C«Java Fundamentos«Sintaxe da Linguagem«4
C04Q03«Qual o resultado ao executar as seguintes classes? class Pai { void show() { System.out.println("Show Pai");}} public class Filho extends Pai { static void show() { System.out.println("Show Filho"); }}«Erro de compilação na classe Pai«Erro de compilação na classe Filho«Sem erro na compilação, mas acontece um "Runtime Exception" na classe Pai«Sem erro na compilação, mas acontece um "Runtime Exception" na classe Filho«B«Java Fundamentos«Sintaxe da Linguagem«4
C04Q04«Qual o resultado ao executar as seguintes classes? class Pai { static void show() { System.out.println("Show Pai"); }} public class Filho extends Pai { void show() { System.out.println("Show Filho"); }}«Erro de compilação na classe Pai«Erro de compilação na classe Filho«Sem erro na compilação, mas acontece um "Runtime Exception" na classe Pai«Sem erro na compilação, mas acontece um "Runtime Exception" na classe Filho«B«Java Fundamentos«Sintaxe da Linguagem«4
C04Q05«Qual o resultado ao executar a seguinte classe? public class Teste { static String str1 = "main method with String[] args"; static String str2 = "main method with int[] args"; public static void main(String[] args) { System.out.println(str1); } public static void main(int[] args) { System.out.println(str2); }}«Método main() duplicado, erro de compilação«Mostra "main method with String[] args"«Mostra "main method with int[] args"«Executa corretamente mas não mostra nada«B«Java Fundamentos«Sintaxe da Linguagem«4
C04Q06«Qual o resultado ao executar o seguinte trecho de código? System.out.println("" + 2 + 3); System.out.println(2 + 3); System.out.println(2 + 3 + ""); System.out.println(2 + "" + 3);«Mostra 23, 5, 5 e 23«Mostra 5, 5, 5 e 23«Mostra 23, 5, 23 e 23«Erro de Compilação na terceira instrução«A«Java Fundamentos«Instruções«4
C04Q07«Qual o resultado ao executar o seguinte trecho de código? if (new Boolean("true") == new Boolean("true")) System.out.println("True"); else System.out.println("False");«Erro de Compilação«Não gera erro na compilação, mas gera "Runtime Exception"«Mostra "True"«Mostra "False"«D«Java Fundamentos«Instruções«4
C04Q08«Qual o resultado ao executar a seguinte classe? public class Teste { private int i = 20; public static void inicia() { int i = 10; } public static void main(String[] args) { System.out.println(new Teste().i); }}«Erro de compilação, variável "i" declarada duas vezes«Erro de compilação, inicializadores "static" só podem possuir uma única inicialização«Mostra 10«Mostra 20«D«Java Fundamentos«Sintaxe da Linguagem«4
C04Q09«Qual o resultado ao executar o seguinte trecho de código? int[] iArray = new int[10]; iArray.length = 15; System.out.println(iArray.length);«Mostra 10«Mostra 15«Erro "runtime exception"«Erro de compilação«D«Java Fundamentos«Instruções«4
C04Q10«Qual o resultado ao executar o seguinte techo de código? int i = 10, j = 10; boolean b = false; System.out.println((b = i == j)?"True":"False");«Erro de compilação«Erro "runtime exception"«Mostra "True"«Mostra "False"«C«Java Fundamentos«Instruções«4
C04Q11«Em qual dessas declarações ocorrerá erro de compilação?«float f = (float)1.3;«char c = "a";«byte b = 25;«String s = null;«B«Java Fundamentos«Sintaxe da Linguagem«4
C04Q12«Qual desses nomes de atributos não é válido para a linguagem Java?«atrib2«_3_«$atrib«#atrib«D«Java Fundamentos«Sintaxe da Linguagem«4
C04Q13«Qual o resultado ao executar o seguinte trecho de código? int i=1; switch (i) { case 0: System.out.println("zero"); break; case 1: System.out.println("um"); case 2: System.out.println("dois"); default: System.out.println("default"); }«um«um, default«um, dois, default«default«C«Java Fundamentos«Instruções«4
C04Q14«Qual das seguintes instroções, mostra o valor -4.0?«System.out.println(Math.floor(-4.7));«System.out.println(Math.min(-4.7, -4.0));«System.out.println(Math.ceil(-4.7));«Nenhuma das instruções mostraria o valor -4.0«C«Java Fundamentos«Sintaxe da Linguagem«4
C04Q15«Qual o resultado ao executar o seguinte trecho de código? String s = "inalmente"; char c = 'F'; String f = "" + c; for (int i = 0; i < s.length(); i++) f += s.charAt(i); System.out.println(f);«Compila e executa corretamente gerando a saída "Finalmente"«Compila e executa corretamente gerando a saída "Fetnemlani"«Erro de Compilação«Erro de Run-Time«A«Java Fundamentos«Instruções«4
C05Q01«Considerando a seguinte linha: int[] x = new int[25]; selecione a questão correta:«x[24] é 0«x[24] é indefinido«x[25] é 0«x.length é 24«A«Java Fundamentos«Sintaxe da Linguagem«5
C05Q02«Qual o resultado ao executar o seguinte trecho de código? double d = 12.3; float f = (float)d; int i = (int)f; d = i; System.out.println(d);«12.0«12.3«12«Erro de Compilação«A«Java Fundamentos«Instruções«5
C05Q03«Qual o resultado ao executar o seguinte trecho de código? int x, a = 6, b = 7; x = a++ + b++;«x = 15, a = 7, b = 8«x = 15, a = 6, b = 7«x = 13, a = 7, b = 8«x = 13, a = 6, b = 7«C«Java Fundamentos«Instruções«5
C05Q04«Qual o resultado ao executar o seguinte trecho de código? int x = 4; System.out.println((x > 4)?99.99: 9);«Mostra 99.99«Mostra 9«Mostra 9.0«Erro de compilação na linha 4«C«Java Fundamentos«Instruções«5
C05Q05«Qual dessas instruções está correta?«byte c = 128;«double d = 10.0F;«float f = 41.0;«char a = "B";«B«Java Fundamentos«Sintaxe da Linguagem«5
C05Q06«Qual o modo correto de corrigir as seguintes instruções: int i = 10, a = 10; if i == a System.out.println(a); else System.out.println(a);«Inserindo parênteses envolvendo a condicional do comando IF«Retirando a instrução seguida do subcomando ELSE que não faz nada«Todas as instruções estão corretas«Retirando o ";" do primeiro System.out.println(a), pois o comando IF só necessita do ";" ao final«A«Java Fundamentos«Sintaxe da Linguagem«5
C05Q07«Qual o resultado ao executar o seguinte trecho de código? byte b = 2; byte b1 = 3; b = b * b1; System.out.println(b);«Mostra 6«Mostra 6.0«Erro de compilação«Erro de Run-Time«C«Java Fundamentos«Instruções«5
C05Q08«Considerando o fragmento de código a seguir, qual deve ser o tipo correto para definir a variável t? byte b = 11; short s = 13; t = b + s;«int, long, float ou double«short, int, long, float ou double«byte ou short«boolean, byte ou short«A«Java Fundamentos«Sintaxe da Linguagem«5
C05Q09«Qual o nome do método, da classe java.lang.Math, que ao ser informado o valor -4.4 retornará o valor -4?«min()«round()«abs()«floor()«B«Java Fundamentos«Sintaxe da Linguagem«5
C05Q10«Qual será o conteúdo do objeto s2 ao executar o seguinte trecho de código? String s1 = "phenobarbital"; String s2 = s1.substring(3,5);«null«"eno"«"enoba"«"no"«D«Java Fundamentos«Sintaxe da Linguagem«5
C05Q11«Qual o nome do método, da classe java.lang.Thread, que fará uma Thread parar durante um determinado tempo?«time()«pause()«sleep()«stopLong()«C«Java Fundamentos«Sintaxe da Linguagem«5
C05Q12«Qual será o resultado ao executar o seguinte classe com o comando java Brasil Argentina Suriname? public class Brasil { public static void main(String [] args) { System.out.println(args[0]); }}«Brasil«Argentina«Suriname«Erro de Compilação«B«Java Fundamentos«Sintaxe da Linguagem«5
C05Q13«Quantas linhas serão mostradas ao executar o seguinte trecho de código? int m = 0; while( m++ < 2 ) System.out.println( m );«0«1«2«3«C«Java Fundamentos«Instruções«5
C05Q14«Qual o resultado ao executar o seguinte trecho de código? char val = 1; switch( val ) { default: System.out.print( "S" ); case 1: System.out.print( "P" ); case 2: case 3: System.out.print( "Q" ); break; case 4: System.out.print( "R" ); }«S P Q«P Q«S P Q R«S«B«Java Fundamentos«Instruções«5
C05Q15«Qual dessas instruções é válido para os seguintes atributos: int falso = 0; int verdadeiro = 1;«if (falso){}«if ( verdadeiro = falso){}«if ( verdadeiro || falso ){}«if ( verdadeiro != falso ){}«D«Java Fundamentos«Sintaxe da Linguagem«5
C06Q01«Qual será o valor da String c, caso a classe seja executada com a seguinte linha de comando: "java um dois tres". Código da classe: public class um { public static void main(String[] args) { String c = args[0]; } }«um«dois«tres«Ocorre um ArrayIndexOutOfBoundsException«B«Java Fundamentos«Sintaxe da Linguagem«6
C06Q02«Qual entre as seguintes expressões é(são) valor(es) dos tipos primitivos de Java: (I) 5.3f  (II) true (III) 'a' (IV) "a" (V) null«I, II, III«III, IV«IV, V«Nenhuma das combinações anteriores«A«Java Fundamentos«Sintaxe da Linguagem«6
C06Q03«Qual a saída da seguinte classe? public class Inicia { public static void main(String [] args) { int a = 1; boolean [] matriz = new boolean[1]; if (matriz[0]) a++; System.out.println(a); } }«1«2«null«Erro de Compilação«A«Java Fundamentos«Instruções«6
C06Q04«Qual das palavras a seguir não pode ser usada como nome de um atributo?«Else«then«goto«_valor«C«Java Fundamentos«Sintaxe da Linguagem«6
C06Q05«Qual dos seguintes modificadores fará com que a classe não possa ser herdada?«private«static«final«abstract«C«Java Fundamentos«Sintaxe da Linguagem«6
C06Q06«Qual das afirmações a seguir é falsa?«Uma classe pode ter métodos estáticos e não-estáticos ao mesmo tempo«Uma classe pode ter atributos estáticos e não-estáticos ao mesmo tempo«Em um método estático podemos chamar diretamente um método não-estático«Em um método não-estático podemos chamar diretamente um método estático«C«Java Fundamentos«Sintaxe da Linguagem«6
C06Q07«Em relação a linguagem de programação Java, é correto afirmar:«Todos os métodos de uma classe abstrata devem ser abstratos«Ao herdar uma classe abstrata por uma classe real, somente os métodos estáticos devem ser implementados«Uma classe pode ter várias superclasses, mas pode implementar apenas uma interface«Uma classe só pode ter uma superclasse, mas pode implementar várias interfaces«D«Java Fundamentos«Sintaxe da Linguagem«6
C06Q08«Qual alternativa apresenta todos tipos primitivos válidos como parâmetro para a cláusula switch?«char, short, byte«boolean«int, long«float, double«A«Java Fundamentos«Sintaxe da Linguagem«6
C06Q09«Qual das afirmações a seguir é verdadeira?«A instrução "break" dentro de um laço de repetição faz com que o controle seja passado para a próxima interação«A instrução "break" dentro de um laço de repetição faz com que esse laço seja interrompido«A instrução "break" dentro de um laço de repetição retorna o controle para o método anterior«Todas as afirmações anteriores são falsas«B«Java Fundamentos«Sintaxe da Linguagem«6
C06Q10«Em relação à linguagem Java, dada a declaração: Object [] str = {"a", "ab", "abc"}, o valor de str[1] é:«"a"«"ab"«"abc"«0«B«Java Fundamentos«Sintaxe da Linguagem«6
C06Q11«Ao escrevermos o código de uma Classe Java que implemente a interface Porta, como devemos começar a declaração da classe?«import Porta; public class PortaDeCofre { }«public class PortaDeCofre extends Porta { }«public class PortaDeCofre implements Porta { }«package Porta; public class PortaDeCofre { }«C«Java Fundamentos«Conceito Básico«6